<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAF1QTFRF5eXl
        AAAA6urqlJSU6Ojo7u7u2dnZ3t7eurq6w8PDiYmJoqKie3t7qampxsbGVlZWMjIyUVFRbm5ug4ODaWlp
        eHh4TExMQEBALS0tXV1dCgoKsbGxFxcXISEhkJCQ3H6P6QAAA0VJREFUeF7t3Ot2ojAUhmFME0BR66m1
        tYf7v8zBugFbJDAdGTbhfdbqj6Zo8xnAkAQiAAAAAAAAAAAAAAAAAAAAAAAAAEBwjJ9sNWIue/DJnGw3
        Wu5z5vc58ogukyDNxt2K7k1i+LyNOKJJJYRfOtrTjVlLhDbrkUY08UkStDnFo4xok3cJ0O49sfKqEbHR
        h1S/i498e92kg3LtKJXv5iivuibvrYB18Uq6KJWtVL2rrbyusoqdkoZ160ep5b09rlV8Vbql1KcPSwUR
        3atUph+vg0fstQXPhm5F27Xb8nvrYU83rq+TTOVx2EaMpRp9iuV/DcKspBZ9Wg351W8epBZ9ehg0YdsY
        xT0MmzD8NiThPZCwV3+ZcLPdLZfL3XYjv3czloQv+zQx7sIk6f5FytuNI+Fhbcx1/9Iasz7I39qMIeHh
        1tW6dXG3jPoTbuYNoxHWzbsckeoTPtnmGhr7JFt5aE+48l/8uPa+u/KEadvVnWud29Cd8EfA/BSa+35U
        tkZUnfDbLmpckmaLxSJLE3dd6bYdVXPCp6uAJsqepXg2e87y30vOf7pRnHBT7Y7WZD8morKrndV6vzQU
        J5yXVTNxfRbjWE2pmbmU3aQ34aHcRxsSVJ+A8/Vu9CaMi92wsYnKiNY3Zqc2YdmEnuqXH4KvEdUmLMeq
        PTOJx7IRPWPnWhO+FPUyviU1WblV8/Wi1oT7sl5ScNNJtonMXkrqtCZMZSf1NmHViLa576Y1YSKbuKon
        c8tzcT5KpKBOacJNUa3mml8Un4Rp7NcoTbiVtvHsfRfF3uwalzYoTbiThC2HYXUgup0U1ChNWExOm4UU
        NFkUCRuny7UmlGoFnDD4Ngz/OAz/XBr+92H4fZoJ9Eu7XVvMZJvIje/aIvzrw/Cv8ScwThP+WNsExkvD
        H/P+MW8hheIUxLxF+HNPE5g/nMAccC1i3djn8SewFmMC62kmsCYqF/q6trPQ1yaeFetLv34CXF96EfYa
        4d8jYa9IeBck7NUEEgZ//2H495BO4D7g8O/lDv9+/Dxi6M9U6LkVNTwXI48Y+rNNvq7W68+n+Xd6nk9z
        9jUOem/y3gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/GdR9AcehTRV8uamqQAAAABJRU5ErkJggg==
</value>
  </data>
</root>